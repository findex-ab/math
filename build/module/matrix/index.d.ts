import { Vector } from '../vector';
export type V2 = [number, number];
export type Mat2 = [V2, V2];
export type V3 = [number, number, number];
export type Mat3 = [V3, V3, V3];
export type V4 = [number, number, number, number];
export type Mat4 = [V4, V4, V4, V4];
export type Matrix = Mat2 | Mat3 | Mat4;
export declare const MAT4_IDENTITY: () => Mat4;
export declare const MAT4_ZERO: () => Mat4;
export declare const v4Dot: (a: V4, b: V4) => number;
export declare const v4Norm: (v: V4) => number;
export declare const quatMat4: (quat: Vector) => Mat4;
export declare const matMulMat: <T extends Matrix = Matrix>(a: T, b: T) => T;
export declare const matMulN: <T extends Matrix = Matrix>(matrices: T[]) => T;
export declare const mat4RotateMake: (angle: number, axis: Vector) => Mat4;
export declare const mat4MulV4: (m: Mat4, point: Vector) => Vector;
export declare const mat4Translate: (m: Mat4, t: Vector) => Mat4;
export declare const mat4TranslateMake: (t: Vector) => Mat4;
export declare const mat4ScaleScalar: (m: Mat4, s: number) => Mat4;
export declare const mat4Inverse: (mat: Mat4) => Mat4;
